name: Build and publish wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_linux_wheels:
    name: Build Linux wheels
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies and build AOT
      run: |
        pip install numpy numba scipy build
        python build_aot.py
        
    - name: Build wheels
      run: python -m build --wheel
      
    - name: Upload Linux wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: dist/*.whl

  build_windows_wheels:
    name: Build Windows wheels
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies and build AOT
      run: |
        pip install numpy numba scipy build
        python build_aot.py
        
    - name: Build wheels
      run: python -m build --wheel
      
    - name: Upload Windows wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows
        path: dist/*.whl

  build_macos_wheels:
    name: Build macOS wheels
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies and build AOT
      run: |
        pip install numpy numba scipy build
        python build_aot.py
        
    - name: Build wheels
      run: python -m build --wheel
      
    - name: Upload macOS wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos
        path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Build sdist
      run: |
        pip install build
        python -m build --sdist
        
    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  test_pypi_upload:
    needs: [build_linux_wheels, build_windows_wheels, build_macos_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist/
        
    - name: Flatten artifacts
      run: |
        mkdir -p dist-flat
        find dist/ -name "*.whl" -exec cp {} dist-flat/ \;
        find dist/ -name "*.tar.gz" -exec cp {} dist-flat/ \;
        
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        packages-dir: dist-flat/

  pypi_upload:
    needs: [build_linux_wheels, build_windows_wheels, build_macos_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist/
        
    - name: Flatten artifacts
      run: |
        mkdir -p dist-flat
        find dist/ -name "*.whl" -exec cp {} dist-flat/ \;
        find dist/ -name "*.tar.gz" -exec cp {} dist-flat/ \;
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist-flat/

  github_release:
    needs: [build_linux_wheels, build_windows_wheels, build_macos_wheels, build_sdist, pypi_upload]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/download-artifact@v4
      with:
        path: dist/
        
    - name: Flatten artifacts
      run: |
        mkdir -p dist-flat
        find dist/ -name "*.whl" -exec cp {} dist-flat/ \;
        find dist/ -name "*.tar.gz" -exec cp {} dist-flat/ \;
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist-flat/*
        generate_release_notes: true
        draft: false